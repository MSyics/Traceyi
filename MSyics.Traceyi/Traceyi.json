{
  "Traceyi": {
    "Tracer": [
      // トレースする動作のフィルターを設定する。複数指定可。
      // ................................................................
      // Name   : filter 要素の名前
      // Filter :
      // Listeners :
      // Filters : {TraceFilters}
      //         None       : 無し
      //         Debug      : デバッグ
      //         Info       : 通知
      //         Start      : 開始
      //         Stop       : 停止
      //         Warning    : 注意
      //         Error      : エラー
      //         Calling    : 実行中の操作
      //         Elapsed    : 経過時間
      //         Actions    : Debug, Info, Start, Stop, Warning, Error
      //         All        : すべて
      {
        "Name": "",
        "Filters": "All",
        "Listeners": [ "console", "file" ]
      },
      {
        "Name": "specific",
        "Filters": "All",
        "Listeners": [ "console", "file" ]
      }
    ],
    "Listener": {
      "Console": [
        // コンソールに出力する
        // ................................................................
        // Name           : 要素の名前
        // UseLock        : ロックをかけるかどうか（省略：false）
        // UseAsync       : 非同期 I/O または同期 I/O のどちらを使用するか（省略：false）
        // NewLine        : 改行文字（省略：\r\n）
        // Encoding       : エンコーディング（省略：UTF-8）
        // UseErrorStream : エラーストリームを使用するかどうか（省略：false）
        {
          "Name": "console",
          "UseLock": true,
          "UseAsync": false,
          "NewLine": "\r\n",
          "Encoding": "shift-jis",
          "UseErrorStream": false,
          // 出力するログのレイアウトを指定する（省略可）
          // ................................................................
          // レイアウト項目
          //
          // {tab}         : タブ
          // {newLine}     : 改行
          // {dateTime}    : DateTime 型
          // {action}      : TraceAction 型
          // {message}     : Object 型
          // {activityId}  : Object 型
          // {operationId} : Object 型
          // {threadId}    : Int32 型
          // {processId}   : Int32 型
          // {processName} : String 型
          // {machineName} : String 型
          //
          // 書式設定
          // ................................................................
          // 型に応じた書式設定が可能
          //
          // {dateTime:yyyy/MM/dd HH:mm:ss.ffff}
          // {action:D}
          //
          // カスタム書式設定
          // ................................................................
          // 項目の最大文字数の指定と文字埋めが可能
          // 標準書式設定と組み合わせての設定可能
          // [埋め文字]を指定しないときは空白（' '）が入る
          //
          // {[項目名]|[埋め文字],[最大文字数]:[文字寄せ（L:左寄せ R:右寄せ）]}
          //
          // {message|_, 20:R}
          // {threadId, 4:D4|_, 8:L}
          "Layout": {
            "Format": "{dateTime:yyyy/MM/dd}{tab}{dateTime:HH:mm:ss.ffff}{tab}{action}{tab}{operationId}{tab}{activityId}{tab}{threadId}{tab}{processId}{tab}{processName}{tab}{machineName}{tab}{message}"
          }
        }
      ],
      "File": [
        // 指定した条件で新しいファイルに出力する
        // ................................................................
        // Path : パスを指定する。レイアウト指定可能（省略：[ApplicationName].log）
        //
        //   {dateTime}    : DateTime 型
        //   {threadId}    : Int32 型
        //   {processId}   : Int32 型
        //   {processName} : String 型
        //   {machineName} : String 型
        //
        // MaxLength   : ファイルの最大バイトサイズ。
        //               このサイズを超えるときに新しいファイルが作成される。
        //               作成済みのファイルには連番がふられる。
        //               （省略：0）
        // LeaveFiles  : ファイルの最大バイト数を超えたファイルを残すかどうか
        {
          "Name": "file",
          "UseLock": true,
          "UseAsync": true,
          "NewLine": "\r\n",
          "Encoding": "shift-jis",
          "Path": "Test.log",
          "MaxLength": 0,
          "TempLength": 1048576,
          "LeaveFiles": true,
          "Layout": {
            "Format": "{dateTime}{tab}{message}"
          }
        }
      ]
    }
  }
}
